input:
  opcuatrigger:
    endpoint: "opc.tcp://localhost:46010"
    #nodeIDs: ["ns=2;s=Humidity", "ns=2;s=Air Quality"]
    tNodeIDs:
      - '{"1": [{"node": "ns=2;s=Pressure", "group": "D001", "db": "mssql", "historian": "influx", "sqlSp": "sp_sql_logging"}]}'
      - '{"2": [{"node": "ns=2;s=Temperature", "group": "D002", "db": "mssql", "historian": "influx", "sqlSp": "sp_sql_logging"}]}'
    subscribeEnabled: true
    insecure: true
    tBatchNodeIDs:
      - '{"1": [{"node":"ns=2;s=Pressure", "name": "PressureNodeName"}, {"node": "ns=2;s=Humidity", "name": "HumidityNodeName"}]}'
      - '{"2": [{"node":"ns=2;s=Temperature","name": "TemperatureNodeName"}, {"node": "ns=2;s=Temperature", "name": "Temperature Node Name"}]}'

pipeline:
  processors:
    - bloblang: |
        root = meta("Message").parse_json()
        root.value = this
        root.timestamp_ms = (timestamp_unix_nano() / 1000000).floor()
        root.trigger = meta("opcua_path")
        root.group = meta("group")
        root.db = meta("db")
        root.historian = meta("historian")
        root.sqlSp = meta("sqlSp")
        
        let one = "%s%s= '%s'".format("@", "group", meta("group"))
        let two = "%s%s= '%s'".format("@", "trigger", meta("opcua_path"))
        let three = "%s%s= %s".format("@", "timestamp_ms", root.timestamp_ms.string())
        let four = "%s%s= %s".format("@", "value", root.value)
        let gmeta = "%s, %s, %s, %s".format($one,$two,$three,$four)

        let query = meta("Message").replace_all("{","").replace_all("}","").split(",").map_each(item -> " %s%s".format("@",item)).string().replace_all("\"","").replace_all("\\","").replace_all("[","").replace_all("]","").replace_all(":","=")
        root.query = "exec " + meta("sqlSp")+ " " + $query + ", " + $gmeta
    - sql_raw:
        driver: postgres
        dsn: postgresql://opcua:password@localhost:5432/opcua?sslmode=disable
        query: root.query
        exec_only: true

output:
  broker:
    pattern: fan_out
    outputs:
      - redis_list:
          url: tcp://localhost:6379
          key: 'trigger'
      - mqtt:
          urls:
            - 'tcp://localhost:1883'
          topic: 'ia/raw/opcuasimulator/${! meta("opcua_path") }'